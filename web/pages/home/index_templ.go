// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package home

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import lyts "crypto-braza-tokens-admin/web/layouts"

func HomePage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"bgc-white p-20 bd\"><h1 class=\"fw-bold fs-24\">Welcome to Braza Crypto Admin</h1><p class=\"fs-16 c-grey-700\">This is the main page of the application where you can check all the details about it.</p><div class=\"row gap-20 mT-10\"><div class=\"col-md-4\"><div class=\"bgc-blue-50 p-20 bd\"><h3 class=\"c-blue-500\">Dashboard</h3><p>View key metrics and performance indicators for all Braza Bank Domain.</p></div></div><div class=\"col-md-4\"><div class=\"bgc-orange-50 p-20 bd\"><h3 class=\"c-orange-500\">Operate (Mint/Burn)</h3><p>Execute Mint or Burn Operations on chain, for Braza Bank Stablecoins (USDB & BBRL)</p></div></div><div class=\"col-md-4\"><div class=\"bgc-brown-50 p-20 bd\"><h3 class=\"c-brown-500\">Operations History</h3><p>Track and navigate through the history of all operations.</p></div></div></div><div class=\"row gap-20 mT-10\"><div class=\"col-md-4\"><div class=\"bgc-purple-50 p-20 bd\"><h3 class=\"c-purple-500\">Ramp Transactions</h3><p>Track and navigate through the history of all ON-Ramp and OFF-Ramp transactions.</p></div></div><div class=\"col-md-4\"><div class=\"bgc-red-50 p-20 bd\"><h3 class=\"c-red-500\">Treasury Management</h3><p>Manage the treasury and its assets for all Braza Bank Domains.</p></div></div><div class=\"col-md-4\"><div class=\"bgc-green-50 p-20 bd\"><h3 class=\"c-green-500\">Parameterization</h3><p>Configure and set up all applications from the Braza Crypto Ecosystem.</p></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = lyts.CorePage("Home").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
